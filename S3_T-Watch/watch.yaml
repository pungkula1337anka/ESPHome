

##################################
###############################
# 1.54" LCD TOUCH CAPTIVE ST7789V
# 400 mA Litium battery
# Triaxial accelerometer BMA423
# Touch Screen Chip: FT6236U
# LoRa SX1262
# PMU Power Management: AXP2101
# Speaker: PIR
# DRV2605 Haptic Motor  SDA: IO10 SCL: IO11
# RTC Clock Module: PCF8563
 
###############################
# -> LILYGO-T-Watch-S3 <- #
# -> ESPHOME <- #
# -> https://github.com/velijv/LILYGO-T-Watch-S3-ESPHome <- #
#############################

# -> ESPHOME <- # 
esphome:
  # Include customized header files for TFT_eSPI, LVGL components and the demo UI
  includes:
 #   # - tftespi-component.h
 #   - bootlogo.h
 #   - lv_conf.h
  #  - lv_demo_conf.h
  #  - LvglComponent.h
  #  - LvglCheckbox.h
  #  - LvglSwitch.h
  #  - LvglToggleButton.h
  # Dowload extra libraries for TFT_eSPI, LVGL and the demo UI
  libraries:
    - FFmpeg
    - bodmer/tft_espi
    - lvgl/lvgl
    - lvgl/lv_examples
    - lvgl/demo

  platformio_options:
    board_build.flash_mode: dio
    upload_speed: 1500000
    build_flags:
      - "-D LV_CONF_INCLUDE_SIMPLE"
      - "-D LV_LVGL_H_INCLUDE_SIMPLE"
      - "-D LV_DEMO_CONF_INCLUDE_SIMPLE"
      - "-I src      ; for lv_conf.h"
      # - "-I .piolibdeps/hasp-esphome      ; for hasplib"
      - "-D LV_MEM_SIZE=49152U           ; 48 kB lvgl memory"
      # The folowing defines will configure the TFT display driver, size and pins
      - "-D USER_SETUP_LOADED=1"
      - "-D ILI9341_DRIVER=1"
      # - "-D SUPPORT_TRANSACTIONS ; Default on ESP32"
      - "-D TFT_WIDTH=240"
      - "-D TFT_HEIGHT=320"
      - "-D TFT_ROTATION=0 ; Use default, see TFT_ROTATION values"
      - "-D TFT_MISO=19"
      - "-D TFT_MOSI=23"
      - "-D TFT_SCLK=18"
      - "-D TFT_BCKL=32  ; Configurable via web UI (default 32)"
      - "-D TOUCH_CS=12  ; Default for TFT connector"
      - "-D TOUCH_CAL_DATA=268,3553,383,3532,6  ; Touch Calibration Data"
      - "-D SPI_FREQUENCY=40000000"
      - "-D SPI_TOUCH_FREQUENCY=2500000"
      - "-D SPI_READ_FREQUENCY=20000000"
    # board_build.f_flash: 80000000L
  name: watch2
  friendly_name: watch2
  on_boot:
    then:
      - light.turn_on: 
          id: led
          brightness: 100%
      - lvgl.page.show: clock_page
      - delay: 6s
      - light.turn_off: led
      
# -> ESP32 <- # 
esp32:
  flash_size: 16MB  
  board: esp32-s3-devkitc-1
  variant: esp32s3
  framework:
    type: esp-idf
    version: recommended
    sdkconfig_options:
        CONFIG_ESP32_S3_BOX_BOARD: "y"
        CONFIG_ESP32_WIFI_STATIC_RX_BUFFER_NUM: "16"
        CONFIG_ESP32_WIFI_DYNAMIC_RX_BUFFER_NUM: "512"
        CONFIG_TCPIP_RECVMBOX_SIZE: "512"
        CONFIG_TCP_SND_BUF_DEFAULT: "65535"
        CONFIG_TCP_WND_DEFAULT: "512000"
        CONFIG_TCP_RECVMBOX_SIZE: "512"
    components:
      - name: esp32_s3_box_3_board
        source: github://jesserockz/esp32-s3-box-3-board@main
        refresh: 0s
      - name: lvgl
        source: github://clydebarrow/esphome@lvgl
        refresh: 0s

# -> INCLUDE <- # 
api: !include api.yaml
ota: !include ota.yaml
wifi: !include wifi.yaml
time: !include time.yaml
sensor: !include sensor.yaml
script: !include scripts.yaml
button: !include button.yaml
light: !include light.yaml
switch: !include switch.yaml
text_sensor: !include text_sensor.yaml
image: !include image.yaml
font: !include font.yaml
color: !include color.yaml
#deep_sleep: !include deep_sleep.yaml
#micro_wake_word: !include micro_wake_word.yaml
#interval: !include interval.yaml
captive_portal:

# -> PSRAM <- # 
psram:
  mode: octal
  speed: 80MHz

# -> LOGS <- # 
logger:
  hardware_uart: USB_SERIAL_JTAG
  logs:
    esp32_ble: WARN
    esp32_ble_tracker: WARN
    ble_dist: WARN
    sensor: WARN
    ledc.output: WARN
    component: WARN
    ili9xxx: WARN
    tt21100: WARN
    touchscreen: WARN
    wifi: WARN
    es8311: WARN
    i2s_audio: WARN
    voice_assistant: WARN
    es7210: WARN

#deep_sleep: !include deep_sleep.yaml
#  id: sleep_1
#   run_duration: 30s
#   wakeup_pin: 
#     number: 16
#     allow_other_uses: true
#     inverted: true
#   wakeup_pin_mode: KEEP_AWAKE

# -> GLOBALS <- # 
globals:
  - id: wifi_connection
    type: bool
    restore_value: no
    initial_value: "false"
  - id: api_connection
    type: bool
    restore_value: no
    initial_value: "false" 
  - id: start_x
    type: int
    restore_value: no
    initial_value: "0"
  - id: start_y
    type: int
    restore_value: no
    initial_value: "0" 
  - id: current_page
    type: int
    restore_value: no
    initial_value: "0" 

#axp2101:
#  i2c_id: general
#  address: 0x34 
##########################################################
 
########################
# -> EXTERNAL COMPONENTS <- #
########################
external_components:
  - source:
      type: git
      url: "https://github.com/gnumpi/esphome_audio"
      ref: dev-next
    components: [ adf_pipeline, i2s_audio ]
    refresh: 0s 
  - source: github://pr#6520
    components: voice_assistant
    refresh: 0s    
  - source: github://clydebarrow/esphome@lvgl
    components: [ lvgl ]     
  - source: /config/esphome/apps/music

    
##################################

########################
# -> IR REMOTE TRANSMITTER <- #
########################
remote_transmitter:
  pin: 2
  carrier_duty_percent: 50%

########################
# -> I2C <- #
########################
i2c:
  - id: general
    sda: 10
    scl: 11
  - id: tsc
    sda: 39
    scl: 40
 
########################
# -> SPI <- #
########################
spi:
  - id: tft
    clk_pin: GPIO18
    mosi_pin: GPIO13
    interface: hardware
 
########################
# -> ADF PIPELINE <- #
########################
adf_pipeline:
  - platform: i2s_audio
    type: audio_out
    id: adf_spk
    i2s_audio_id: i2s_out
    i2s_dout_pin: GPIO46
 
  - platform: i2s_audio
    type: audio_in
    id: adf_mic
    i2s_audio_id: i2s_in
    i2s_din_pin: GPIO47
    channel: right
    sample_rate: 16000
    bits_per_sample: 16bit
    pdm: true
 
########################
# -> MICROPHONE <- #
########################
microphone:
  - platform: adf_pipeline
    id: adf_microphone
    gain_log2: 3
    keep_pipeline_alive: false
    pipeline:
      - adf_mic
      - self
 
########################
# -> MEDIA PLAYER <- #
########################
media_player:
  - platform: adf_pipeline
    id: adf_media_player
    name: watch player
    keep_pipeline_alive: false
    internal: false
    pipeline:
      - self
      - adf_spk
 
########################
# -> I2S AUDIO <- #
########################
i2s_audio:
  - id: i2s_in
    i2s_lrclk_pin: GPIO44
  - id: i2s_out
    i2s_lrclk_pin: GPIO15
    i2s_bclk_pin: GPIO48
 

########################
# -> VOICE ASSISTANT <- #
########################
voice_assistant:
  id: va
  microphone: adf_microphone
  media_player: adf_media_player
  volume_multiplier: 3
  noise_suppression_level: 2
  auto_gain: 31dBFS
  use_wake_word: true
#  on_wake_word_detected:
#    - media_player.play_media: "https://qwackify.duckdns.org/sound/qwack.mp3"
  on_listening:
    - light.turn_on:
        id: led
        blue: 100%
        red: 0%
        green: 0%
        effect: "Slow Pulse"
  on_stt_vad_end:
    - light.turn_on:
        id: led
        blue: 100%
        red: 0%
        green: 0%
        effect: "Fast Pulse"
  on_stt_end:
    - text_sensor.template.publish:
        id: text_request
        state: !lambda return x;
  on_tts_start:
    - light.turn_on:
        id: led
        blue: 100%
        red: 0%
        green: 0%
        brightness: 100%
        effect: none
    - text_sensor.template.publish:
        id: text_response
        state: !lambda return x;
  on_end:
    - delay: 100ms
    - wait_until:
        not:
          media_player.is_playing:
    - script.execute: reset_led
  on_error:
    - light.turn_on:
        id: led
        red: 100%
        green: 0%
        blue: 0%
        brightness: 100%
        effect: none
    - delay: 1s
    - script.execute: reset_led
  on_client_connected:
    - if:
        condition:
          switch.is_on: use_wake_word
        then:
          - voice_assistant.start_continuous:
          - script.execute: reset_led
  on_client_disconnected:
    - if:
        condition:
          switch.is_on: use_wake_word
        then:
          - voice_assistant.stop:
          - light.turn_off: led


########################
# -> DISPLAY & TOUCH <- #
########################
display:
  - platform: ili9xxx
    model: ST7789V
    id: screen
    transform:
      mirror_x: true
      mirror_y: true
      swap_xy: false
    dimensions:
      width: 240
      height: 240
      offset_width: 0
      offset_height: 80
    invert_colors: true
    cs_pin: 12
    dc_pin: 38
    pages:

# -> HOME PAGE <- #
      - id: home_page
        lambda: |-
          it.strftime((it.get_width() / 2), (it.get_height() / 2), id(time_font), TextAlign::CENTER, "%H:%M", id(time_ha).now());
 

# -> DUCK PAGE <- #
      - id: duck_page
        lambda: |-
          it.image(0, 0, id(logo_img));

# -> PAGE 1 <- #
      - id: page1
        lambda: |- 
          if (id(total_power_lights).state < 50) {
            it.image(0, 0, id(page1_img2));
          } else {
            it.image(0, 0, id(page1_img));
          }
    
# -> PAGE 2 <- #
      - id: page2
        lambda: |- 
          it.image(0, 0, id(page2_img));

# -> PAGE 3 <- #
      - id: page3
        lambda: |- 
          it.image(0, 0, id(page3_img));

# -> PAGE 4 <- #
      - id: page4
        lambda: |- 
          it.image(0, 0, id(page4_img));

# -> PAGE 5 <- #
      - id: page5
        lambda: |- 
          it.image(0, 0, id(page5_img));

# -> PAGE 6 <- #
      - id: page6
        lambda: |- 
          it.image(0, 0, id(page6_img));      

# -> PAGE 7 <- #
      - id: page7
        lambda: |- 
          it.image(0, 0, id(page7_img));     

# -> TOUCH <- # 
touchscreen:
  - platform: ft63x6
    interrupt_pin: 
      number: GPIO16
      # allow_other_uses: true
    address: 0x38
    display: screen
    id: tscreen
    i2c_id: tsc
    calibration:
      x_min: 0
      x_max: 240
      y_min: 0
      y_max: 240
    on_touch:
      - light.turn_on: 
          id: led
          brightness: 50%


    on_update:
      - lambda: |-
          for (auto touch: touches)  {
            if (touch.state == 1) {
              // Touch started, store initial position
              id(start_x) = touch.x;
              id(start_y) = touch.y;
            } else if (touch.state >= 4) {
              // Touch ended, compare final position to initial
              int dx = touch.x - id(start_x);
              int dy = touch.y - id(start_y);
              if (abs(dx) > abs(dy)) {
                // Horizontal swipe
                if (dx > 0) {
                  // Right swipe
                  if (id(current_page) == 7) {
                    id(screen).show_page(id(page6));
                    id(current_page) = 6;
                  } else if (id(current_page) == 6) {
                    id(screen).show_page(id(page5));
                    id(current_page) = 5;
                  } else if (id(current_page) == 5) {
                    id(screen).show_page(id(page4));
                    id(current_page) = 4;
                  } else if (id(current_page) == 4) {
                    id(screen).show_page(id(page3));
                    id(current_page) = 3;
                  } else if (id(current_page) == 3) {
                    id(screen).show_page(id(page2));
                    id(current_page) = 2;
                  } else if (id(current_page) == 2) {
                    id(screen).show_page(id(page1));
                    id(current_page) = 1;
                  } else if (id(current_page) == 1) {
                    id(screen).show_page(id(home_page));
                    id(current_page) = 0;
                  }
                } else {
                  // Left swipe
                  if (id(current_page) == 0) {
                    id(screen).show_page(id(page1));
                    id(current_page) = 1;
                  } else if (id(current_page) == 1) {
                    id(screen).show_page(id(page2));
                    id(current_page) = 2;
                  } else if (id(current_page) == 2) {
                    id(screen).show_page(id(page3));
                    id(current_page) = 3;
                  } else if (id(current_page) == 3) {
                    id(screen).show_page(id(page4));
                    id(current_page) = 4;
                  } else if (id(current_page) == 4) {
                    id(screen).show_page(id(page5));
                    id(current_page) = 5;
                  } else if (id(current_page) == 5) {
                    id(screen).show_page(id(page6));
                    id(current_page) = 6;
                  } else if (id(current_page) == 6) {
                    id(screen).show_page(id(page7));
                    id(current_page) = 7;
                  }
                }
              } else {
                // Vertical swipe
                if (dy > 0) {
                  // Down swipe
                  id(control_page_on).execute();
                } else {
                  // Up swipe
                  id(control_page_off).execute();
                }
              }
            }
          }


    # -> ON UPDATE <- #
#    on_update:
#      - lambda: |-
#          for (auto touch: touches)  {
#            if (touch.state == 1) {
#              // Touch started, store initial position
#              id(start_x) = touch.x;
#              id(start_y) = touch.y;
#            } else if (touch.state >= 4) {
#              // Touch ended, compare final position to initial
#              int dx = touch.x - id(start_x);
#              int dy = touch.y - id(start_y);
#              if (abs(dx) > abs(dy)) {
#                // Horizontal swipe
#                if (dx > 0) {
#                  // Right swipe
#                  if (id(current_page) == 7) {
#                    id(screen).show_page(id(page6));
#                    id(current_page) = 6;
#                    // If on page 6
#                  } else if (id(current_page) == 6) {
#                    id(screen).show_page(id(page5));
#                    id(current_page) = 5;
#                    // If on page 5
#                  } else if (id(current_page) == 5) {
#                    id(screen).show_page(id(page4));
#                    id(current_page) = 4;
#                  } else if (id(current_page) == 4) {
#                    id(screen).show_page(id(page3));
#                    id(current_page) = 3;
#                  } else if (id(current_page) == 3) {
#                    id(screen).show_page(id(page2));
#                    id(current_page) = 2;
#                  } else if (id(current_page) == 2) {
#                    id(screen).show_page(id(page1));
#                    id(current_page) = 1;
#                  } else if (id(current_page) == 1) {
#                    id(screen).show_page(id(home_page));
#                    id(current_page) = 0;
#                  }
#                } else {
#                  // Left swipe
#                  if (id(current_page) == 0) {
#                    id(screen).show_page(id(page1));
#                    id(current_page) = 1;
#                  } else if (id(current_page) == 1) {
#                    id(screen).show_page(id(page2));
#                    id(current_page) = 2;
#                  } else if (id(current_page) == 2) {
#                    id(screen).show_page(id(page3));
#                    id(current_page) = 3;
#                  } else if (id(current_page) == 3) {
#                    id(screen).show_page(id(page4));
#                    id(current_page) = 4;
#                  } else if (id(current_page) == 4) {
#                    id(screen).show_page(id(page5));
#                    id(current_page) = 5;
#                  } else if (id(current_page) == 5) {
#                    id(screen).show_page(id(page6));
#                    id(current_page) = 6;
#                  } else if (id(current_page) == 6) {
#                    id(screen).show_page(id(page7));
#                    id(current_page) = 7;
#                  }
#                }
#              }
#            }
#          }


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
# -> BINARY SENSOR <- #
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
binary_sensor:  

# -> HOME PAGE <- #
  - platform: touchscreen
    page_id: home_page
    id: home_page_binary
    x_min: 0
    x_max: 240
    y_min: 0
    y_max: 240
    on_click:
      min_length: 100ms
      max_length: 5000ms
      then:
        - homeassistant.event:
            event: esphome.button_pressed
            data:
              message: canihelp
    on_double_click:
      min_length: 1ms
      max_length: 700ms
      then: 
        - voice_assistant.start:

# -> PAGE 1 <- #
  - platform: touchscreen
    page_id: page1
    id: page1_binary
    x_min: 0
    x_max: 240
    y_min: 0
    y_max: 240
    on_double_click:
      min_length: 1ms
      max_length: 700ms
      then: 
        - voice_assistant.start:
    on_click:
      min_length: 3000ms
      max_length: 15000ms
      then:
        - script.execute: page1_script    

# -> PAGE 2 <- #
  - platform: touchscreen
    page_id: page2
    id: page2_binary
    x_min: 0
    x_max: 240
    y_min: 0
    y_max: 240
    on_double_click:
      min_length: 1ms
      max_length: 700ms
      then: 
        - voice_assistant.start:
    on_click:
      min_length: 3000ms
      max_length: 15000ms
      then:
        - script.execute: page2_script    

# -> PAGE 3 <- #
  - platform: touchscreen
    page_id: page3
    id: page3_binary
    x_min: 0
    x_max: 240
    y_min: 0
    y_max: 240
    on_double_click:
      min_length: 1ms
      max_length: 700ms
      then: 
        - voice_assistant.start:
    on_click:
      min_length: 3000ms
      max_length: 15000ms
      then:
        - script.execute: page3_script    

# -> PAGE 4 <- #
  - platform: touchscreen
    page_id: page4
    id: page4_binary
    x_min: 0
    x_max: 240
    y_min: 0
    y_max: 240
    on_double_click:
      min_length: 1ms
      max_length: 700ms
      then: 
        - voice_assistant.start:
    on_click:
      min_length: 3000ms
      max_length: 15000ms
      then:
        - script.execute: page4_script

# -> PAGE 5 <- #
  - platform: touchscreen
    page_id: page5
    id: page5_binary
    x_min: 0
    x_max: 240
    y_min: 0
    y_max: 240
    on_double_click:
      min_length: 1ms
      max_length: 700ms
      then: 
        - voice_assistant.start:
    on_click:
      min_length: 3000ms
      max_length: 15000ms
      then:
        - script.execute: page5_script

# -> PAGE 6 <- #
  - platform: touchscreen
    page_id: page6
    id: page6_binary
    x_min: 0
    x_max: 240
    y_min: 0
    y_max: 240
    on_double_click:
      min_length: 1ms
      max_length: 700ms
      then: 
        - voice_assistant.start:
    on_click:
      min_length: 3000ms
      max_length: 15000ms
      then:
        - script.execute: page6_script

# -> PAGE 7 <- #
  - platform: touchscreen
    page_id: page7
    id: page7_binary
    x_min: 0
    x_max: 240
    y_min: 0
    y_max: 240
    on_double_click:
      min_length: 1ms
      max_length: 700ms
      then: 
        - voice_assistant.start:
    on_click:
      min_length: 3000ms
      max_length: 15000ms
      then:
        - script.execute: page7_script        

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
# -> OUTPUT <- #
output:
  - platform: ledc
    pin: GPIO45
    id: backlight_output 
 
###########################

lvgl:
  pages:
# -> CLOCK PAGE <- #  
    - id: clock_page
      widgets:
        - obj: # clock container
            height: size_content
            width: 240
            align: CENTER
            pad_all: 0
            border_width: 0
            bg_color: 0xFFFFFF
            widgets:
              - meter: # clock face
                  height: 220
                  width: 220
                  align: center
                  bg_opa: TRANSP
                  border_width: 0
                  text_color: 0x000000
                  scales:
                    - range_from: 0 # minutes scale
                      range_to: 60
                      angle_range: 360
                      rotation: 270
                      ticks:
                        width: 1
                        count: 61
                        length: 10
                        color: 0x000000
                      indicators:
                        - line:
                            id: minute_hand
                            width: 3
                            color: 0xa6a6a6
                            r_mod: -4
                            value: 0
                    - range_from: 1 # hours scale for labels
                      range_to: 12
                      angle_range: 330
                      rotation: 300
                      ticks:
                        width: 1
                        count: 12
                        length: 1
                        major:
                          stride: 1
                          width: 4
                          length: 10
                          color: 0xC0C0C0
                          label_gap: 12
                    - range_from: 0 # hi-res hours scale for hand
                      range_to: 720
                      angle_range: 360
                      rotation: 270
                      ticks:
                        count: 0
                      indicators:
                        - line:
                            id: hour_hand
                            width: 5
                            color: 0xa6a6a6
                            r_mod: -30
                            value: 0
              - label:
                  styles: date_style
                  id: day_label
                  y: -30
              - label:
                  id: date_label
                  styles: date_style
                  y: 30

# -> CONTROL PAGE <- #
    - id: control_page
      widgets:
        - obj: # Container for the grid layout
            align: CENTER
            width: 240
            height: 240
            pad_all: 6
            pad_row: 6
            pad_column: 6
            border_width: 0
            layout: # Enable the GRID layout for the children widgets
              type: GRID # Split the rows and columns proportionally
              grid_columns: [FR(1), FR(1)] # Two columns with equal width
              grid_rows: [FR(1), FR(1)] # Two rows with equal height
            widgets:
              - btn: # Button in the top-left cell
                  id: btn_top_left
                  grid_cell_column_pos: 0
                  grid_cell_row_pos: 0
                  x: 10
                  y: 10
                  width: 105
                  height: 105
                  checkable: true
                  widgets:
                    - label:
                        id: lbl_top_left
                        align: center
                        text_font: mdi_42
                        text: "\U000F0336" # mdi-lightbulb-outline
                  on_short_click:
                    - homeassistant.service:
                        service: light.toggle
                        data:
                          entity_id: light.all_bedroom_lights

              - btn: # Button in the top-right cell
                  id: btn_top_right
                  grid_cell_column_pos: 1
                  grid_cell_row_pos: 0
                  x: 125
                  y: 10
                  width: 105
                  height: 105
                  checkable: true
                  widgets:
                    - label:
                        id: lbl_top_right
                        align: center
                        text_font: mdi_42
                        text: "\U000F0336" # mdi-lightbulb-outline
                  on_short_click:
                    - homeassistant.service:
                        service: light.toggle
                        data:
                          entity_id: light.all_bedroom_lights

              - btn: # Button in the bottom-left cell
                  id: btn_bottom_left
                  grid_cell_column_pos: 0
                  grid_cell_row_pos: 1
                  x: 10
                  y: 125
                  width: 105
                  height: 105
                  checkable: true
                  widgets:
                    - label:
                        id: lbl_bottom_left
                        align: center
                        text_font: mdi_42
                        text: "\U000F0336" # mdi-lightbulb-outline
                  on_short_click:
                    - homeassistant.service:
                        service: light.toggle
                        data:
                          entity_id: light.all_bedroom_lights

              - btn: # Button in the bottom-right cell
                  id: btn_bottom_right
                  grid_cell_column_pos: 1
                  grid_cell_row_pos: 1
                  x: 125
                  y: 125
                  width: 105
                  height: 105
                  checkable: true
                  widgets:
                    - label:
                        id: lbl_bottom_right
                        align: center
                        text_font: mdi_42
                        text: "\U000F0336" # mdi-lightbulb-outline
                  on_short_click:
                    - homeassistant.service:
                        service: light.toggle
                        data:
                          entity_id: light.all_bedroom_lights

# -> MUSIC PAGE<- #
    - id: music_page
      lambda: |-
        lv_init();
        lv_demo_music();




                  
      #    - lambda: id(va).set_volume_multiplier(x);
      #    - lambda: id(va).set_auto_gain(x);
       #   - lambda: id(va).set_noise_suppression(x);


 
